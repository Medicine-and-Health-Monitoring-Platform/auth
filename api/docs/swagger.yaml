basePath: /auth
definitions:
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.RefreshToken:
    properties:
      refresh_token:
        type: string
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  users.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      role:
        description: Should be 'customer', 'provider', or 'admin'
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: Authorazation API
  title: Authorazation
  version: "1.0"
paths:
  /login:
    post:
      description: Logs user in
      parameters:
      - description: User credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Logs user in
      tags:
      - auth
  /logout:
    post:
      description: Logouts user by ID
      parameters:
      - description: User email
        in: query
        name: email
        required: true
        type: string
      responses:
        "200":
          description: User logged out successfully
          schema:
            type: string
        "400":
          description: Invalid user id
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Logouts user
      tags:
      - auth
  /refresh-token:
    post:
      description: Refreshes refresh token
      parameters:
      - description: Refresh token
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RefreshToken'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Refreshes refresh token
      tags:
      - auth
  /register:
    post:
      description: Registers a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UserResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Registers user
      tags:
      - auth
swagger: "2.0"
